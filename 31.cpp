/*************************************************************************
	> File Name: 31.cpp
	> Author: 
	> Mail: 
	> Created Time: 2019年03月18日 星期一 16时32分44秒
 ************************************************************************/
//降维（由31_1二维的方法降成一维）dp只存储钱数不存储当前使用到的种类
//因为dp[i][j] = d[i - 1][j] + dp[i][j - w[k]];即当前状态只与它的前一行同一列
//的数和同一行前w[k]个元素有关所以可合并为同一行用一维数组存储
#include <stdio.h>
#define MAX_W 8

int w[MAX_W] = {1, 2, 5, 10, 20, 50, 100, 200};
int dp[201] = {0};

int main() {
    dp[0] = 1;
    for(int i = 0; i < 8; i++) {
        for(int j = w[i]; j < 201; j++) {
            dp[j] += dp[j - w[i]];
        }
    }
    printf("%d\n", dp[200]);
    return 0;
}
